{"ast":null,"code":"import _regeneratorRuntime from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/owner/Desktop/github/Project-3/youtubeapi/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/owner/Desktop/github/Project-3/youtubeapi/src/components/App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from './youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoItemShow'; // API KEY\n\nvar KEY = 'AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  // state array:videos bring from API response link.\n  // selectedvideo:video selected from videos list.\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(termFromSearchBar) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return youtube.get('/search', {\n                  params: {\n                    q: termFromSearchBar\n                  }\n                });\n\n              case 2:\n                response = _context.sent;\n\n                _this.setState({\n                  videos: response.data.items\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleVideoSelect = function (video) {\n      _this.setState({\n        selectedVideo: video\n      });\n    };\n\n    _this.videoButton =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(val) {\n        var videosUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"https://www.googleapis.com/youtube/v3/search?key=AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s=\".concat(val, \"&part=snippet&maxResults=9&type=video\"));\n\n              case 2:\n                videosUrl = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      videos: [],\n      selectedVideo: null\n    }; // shuld show what inside the video search.\n\n    _this.videoSearch('plane');\n\n    return _this;\n  } //   make search process.\n\n\n  _createClass(App, [{\n    key: \"videoSearch\",\n    value: function videoSearch(searchTerm) {\n      var _this2 = this;\n\n      youtube({\n        key: KEY,\n        term: searchTerm\n      }, function (data) {\n        _this2.setState({\n          videos: data,\n          selectedVideo: data[0]\n        });\n      });\n    } //   handelsubmit a prop to the SearchBar component to be able to take the term we want from the search bar.\n    // add note.to check\n    //   async: when I get data from API.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"ui container\",\n        style: {\n          marginTop: '1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleFormSubmit: this.handleSubmit,\n        videoButton: this.videoButton,\n        onSearchTermChange: function onSearchTermChange(searchTerm) {\n          return _this3.videoSearch(searchTerm);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ui grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"eleven wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(VideoDetail, {\n        video: this.state.selectedVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"five wide column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(VideoList, {\n        handleVideoSelect: this.handleVideoSelect,\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/owner/Desktop/github/Project-3/youtubeapi/src/components/App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","KEY","App","props","handleSubmit","termFromSearchBar","get","params","q","response","setState","videos","data","items","handleVideoSelect","video","selectedVideo","videoButton","val","fetch","videosUrl","state","videoSearch","searchTerm","key","term","marginTop","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CACA;;AACA,IAAMC,GAAG,GAAI,yCAAb;;IAEMC,G;;;;;AACF;AACA;AACA,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;;AADc,UAuBlBC,YAvBkB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAuBH,iBAAOC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYP,OAAO,CAACQ,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,CAAC,EAAEH;AADC;AADkC,iBAAvB,CADZ;;AAAA;AACLI,gBAAAA,QADK;;AAMX,sBAAKC,QAAL,CAAc;AACVC,kBAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AADZ,iBAAd;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvBG;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAiClBC,iBAjCkB,GAiCE,UAACC,KAAD,EAAW;AAC3B,YAAKL,QAAL,CAAc;AAACM,QAAAA,aAAa,EAAED;AAAhB,OAAd;AACH,KAnCiB;;AAAA,UAoClBE,WApCkB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAoCJ,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYC,KAAK,oGAA6FD,GAA7F,2CADjB;;AAAA;AACNE,gBAAAA,SADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OApCI;;AAAA;AAAA;AAAA;AAAA;;AAEd,UAAKC,KAAL,GAAW;AACTV,MAAAA,MAAM,EAAC,EADE;AAETK,MAAAA,aAAa,EAAC;AAFL,KAAX,CAFc,CAOd;;AACA,UAAKM,WAAL,CAAiB,OAAjB;;AARc;AASf,G,CACH;;;;;gCACYC,U,EAAW;AAAA;;AACnBzB,MAAAA,OAAO,CAAC;AAAC0B,QAAAA,GAAG,EAACvB,GAAL;AAAUwB,QAAAA,IAAI,EAACF;AAAf,OAAD,EAA4B,UAACX,IAAD,EAAQ;AACzC,QAAA,MAAI,CAACF,QAAL,CAAc;AACZC,UAAAA,MAAM,EAACC,IADK;AAEZI,UAAAA,aAAa,EAACJ,IAAI,CAAC,CAAD;AAFN,SAAd;AAID,OALM,CAAP;AAMD,K,CACH;AACA;AAEA;;;;6BAiBS;AAAA;;AACL,aAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAACc,UAAAA,SAAS,EAAE;AAAZ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,gBAAgB,EAAE,KAAKtB,YAAlC;AACA,QAAA,WAAW,EAAE,KAAKa,WADlB;AAEA,QAAA,kBAAkB,EAAE,4BAAAM,UAAU;AAAA,iBAAE,MAAI,CAACD,WAAL,CAAiBC,UAAjB,CAAF;AAAA,SAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,iBAAiB,EAAE,KAAKF,iBAAnC;AAAsD,QAAA,MAAM,EAAE,KAAKO,KAAL,CAAWV,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ,CAJJ,CAFJ;AAmBH;;;;EA9Daf,KAAK,CAAC+B,S;;AAiExB,eAAezB,GAAf","sourcesContent":["import React from 'react';\n\nimport SearchBar from './SearchBar';\nimport youtube from './youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoItemShow';\n// API KEY\nconst KEY =  'AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s';\n\nclass App extends React.Component {\n    // state array:videos bring from API response link.\n    // selectedvideo:video selected from videos list.\n    constructor(props){\n        super(props);\n        this.state={\n          videos:[],\n          selectedVideo:null\n         \n        };\n        // shuld show what inside the video search.\n        this.videoSearch('plane');\n      }\n    //   make search process.\n    videoSearch(searchTerm){\n        youtube({key:KEY, term:searchTerm},(data)=>{\n          this.setState({\n            videos:data,\n            selectedVideo:data[0]\n          });\n        });\n      }\n    //   handelsubmit a prop to the SearchBar component to be able to take the term we want from the search bar.\n    // add note.to check\n\n    //   async: when I get data from API.\n    handleSubmit = async (termFromSearchBar) => {\n        const response = await youtube.get('/search', {\n            params: {\n                q: termFromSearchBar\n            }\n        })\n        this.setState({\n            videos: response.data.items\n        })\n    };\n    handleVideoSelect = (video) => {\n        this.setState({selectedVideo: video})\n    }\n    videoButton = async (val) => {\n        let videosUrl = await fetch(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyBdVut9QCzqAHBzfDEh30yUp4E529som6s=${val}&part=snippet&maxResults=9&type=video`)\n    }\n    render() {\n        return (\n            \n            <div className='ui container' style={{marginTop: '1em'}}>\n                <SearchBar handleFormSubmit={this.handleSubmit} \n                videoButton={this.videoButton}\n                onSearchTermChange={searchTerm=>this.videoSearch(searchTerm)}/>\n                <div className='ui grid'>\n                    <div className=\"ui row\">\n                        <div className=\"eleven wide column\">\n                            <VideoDetail video={this.state.selectedVideo}/>\n                        </div>\n                        <div className=\"five wide column\">\n                            <VideoList handleVideoSelect={this.handleVideoSelect} videos={this.state.videos}/>\n                           \n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}