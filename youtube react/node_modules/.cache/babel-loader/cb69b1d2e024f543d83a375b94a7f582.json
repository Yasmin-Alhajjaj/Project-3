{"ast":null,"code":"import _classCallCheck from \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/src/components/App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from './youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoItemShow';\nvar Key = 'AIzaSyAFUNYmE1gfydRFrlb3Q05gXlPSgQmiY6I'; // const key = 'AIzaSyAbU4azHjAu9ZeuAyqGeMvmkyqysD8Rrug';  // MY API KEY.\n\nvar ROOT_URL = 'https://www.googleapis.com/youtube/v3/search'; // BASE URL TO MAKE SEARCH PROCESS USING IT.\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // State Composed of tow things: 1- Array Of Videos Comes From API Response.   2- Selected Video State To Handle Which Video Is Selected From Videos List.\n\n    _this.state = {\n      videos: [],\n      selectedVideo: null // Execute The Function That Make Search Process For Us.\n\n    };\n\n    _this.videosSearch();\n\n    return _this;\n  } // The Definition Of The Function That Make Search Process For Us.\n\n\n  _createClass(App, [{\n    key: \"videosSearch\",\n    value: function videosSearch(term) {\n      var _this2 = this;\n\n      // Parameters That will Be Included In Request URL\n      var params = {\n        part: 'snippet',\n        maxResults: 25,\n        key: key,\n        q: term,\n        type: 'video'\n      }; //@Method GET\n      //Fetch All Videos From Server To React App \n\n      axios.get(ROOT_URL, {\n        params: params\n      }).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          videos: response.data.items,\n          // Set The Response Array To The Array in \"App State\"\n          selectedVideo: response.data.items[0]\n        }); // Set \"Selected Video\" To First Element Of Response Array\n\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Search, {\n        onSearchTermChange: function onSearchTermChange(searchTerm) {\n          return _this3.videosSearch(searchTerm);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Video, {\n        video: this.state.selectedVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(List, {\n        onVideoSelect: function onVideoSelect(userSelected) {\n          return _this3.setState({\n            selectedVideo: userSelected\n          });\n        },\n        videos: this.state.videos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/owner/Desktop/github/Project-3/Project-3/react1/youtubeapi/src/components/App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","Key","ROOT_URL","App","props","state","videos","selectedVideo","videosSearch","term","params","part","maxResults","key","q","type","axios","get","then","response","console","log","setState","data","items","catch","error","searchTerm","userSelected","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,IAAMC,GAAG,GAAG,yCAAZ,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,8CAAjB,C,CAAkE;;IAE5DC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN,GADiB,CAEjB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,aAAa,EAAE,IAFJ,CAIb;;AAJa,KAAb;;AAKA,UAAKC,YAAL;;AARiB;AASlB,G,CAED;;;;;iCACgBC,I,EAAK;AAAA;;AACjB;AACA,UAAMC,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,SADO;AAEbC,QAAAA,UAAU,EAAE,EAFC;AAGbC,QAAAA,GAAG,EAAEA,GAHQ;AAIbC,QAAAA,CAAC,EAAEL,IAJU;AAKbM,QAAAA,IAAI,EAAE;AALO,OAAf,CAFiB,CASjB;AACA;;AACAC,MAAAA,KAAK,CAACC,GAAN,CAAUf,QAAV,EAAoB;AAAEQ,QAAAA,MAAM,EAAEA;AAAV,OAApB,EACGQ,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAAChB,UAAAA,MAAM,EAAGa,QAAQ,CAACI,IAAT,CAAcC,KAAxB;AAA+B;AACvCjB,UAAAA,aAAa,EAAEY,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoB,CAApB;AADP,SAAd,EAFgB,CAG+B;;AAChD,OALH,EAMGC,KANH,CAMS,UAAAC,KAAK,EAAI;AACdN,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD,OARH;AASC;;;6BAEI;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,kBAAkB,EAAG,4BAAAC,UAAU;AAAA,iBAAI,MAAI,CAACnB,YAAL,CAAkBmB,UAAlB,CAAJ;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,uBAAAqB,YAAY;AAAA,iBAAI,MAAI,CAACN,QAAL,CAAc;AAACf,YAAAA,aAAa,EAAEqB;AAAhB,WAAd,CAAJ;AAAA,SAAjC;AAAmF,QAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWC,MAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EA5CeuB,S;;AA8ClB,eAAe1B,GAAf","sourcesContent":["import React from 'react';\n\nimport SearchBar from './SearchBar';\nimport youtube from './youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoItemShow';\n\nconst Key = 'AIzaSyAFUNYmE1gfydRFrlb3Q05gXlPSgQmiY6I';\n\n// const key = 'AIzaSyAbU4azHjAu9ZeuAyqGeMvmkyqysD8Rrug';  // MY API KEY.\nconst ROOT_URL = 'https://www.googleapis.com/youtube/v3/search';  // BASE URL TO MAKE SEARCH PROCESS USING IT.\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    // State Composed of tow things: 1- Array Of Videos Comes From API Response.   2- Selected Video State To Handle Which Video Is Selected From Videos List.\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    }\n    // Execute The Function That Make Search Process For Us.\n    this.videosSearch();\n  }\n\n  // The Definition Of The Function That Make Search Process For Us.\n    videosSearch (term){\n      // Parameters That will Be Included In Request URL\n      const params = {\n        part: 'snippet',\n        maxResults: 25,\n        key: key,\n        q: term,\n        type: 'video'\n      };\n      //@Method GET\n      //Fetch All Videos From Server To React App \n      axios.get(ROOT_URL, { params: params })\n        .then(response => {\n          console.log(response)\n          this.setState({videos : response.data.items, // Set The Response Array To The Array in \"App State\"\n                selectedVideo: response.data.items[0]}); // Set \"Selected Video\" To First Element Of Response Array\n        })\n        .catch(error => {\n          console.error(error);\n        });\n      }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search onSearchTermChange={ searchTerm => this.videosSearch(searchTerm)}/>\n        <Video video={this.state.selectedVideo}/>\n        <List onVideoSelect={userSelected => this.setState({selectedVideo: userSelected})} videos={this.state.videos} />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}